var fs = require('fs');
var request = require('request');
var cheerio = require('cheerio');
var express = require('express');
var async = require('async'); 
var url =["http://en.wikipedia.org/wiki/Category:Argentina_international_footballers","http://en.wikipedia.org/w/index.php?title=Category:Argentina_international_footballers&pagefrom=Dezotti%2C+Gustavo%0AGustavo+Dezotti#mw-pages","http://en.wikipedia.org/w/index.php?title=Category:Argentina_international_footballers&pagefrom=Mata%2C+Vicente+de+la%0AVicente+de+la+Mata#mw-pages","http://en.wikipedia.org/w/index.php?title=Category:Argentina_international_footballers&pagefrom=Siviski%2C+Dario%0ADar%C3%ADo+Siviski#mw-pages"];
var playerNames = [];
var playerHeights = [];
var playerAges = [];
var csv = "Playername,Age, hey, whatever, gth\n";
var alphabets = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
var alphabetsContd = "";
var playerBirthLocation = ["http://en.wikipedia.org/wiki/Rosario,_Santa_Fe"];
var count = 0;
var href = "";  // href is just used for storing the links. Used at multiple locations. 
var coordinates ="";
var link = [];

async.series([

  function one (callback){

    for (counter=0; counter < url.length; counter++) {
      console.log(url[counter]);
      trythis(counter);
    }

    function trythis (counter) {

        request({
            "url": url[counter]
        },  

        function(err, resp, body){

          var $ = cheerio.load(body); 
          var data ="";

          for (i = 0; i < 26; i++) {
         
            $("h3").filter(function(){return $(this).text() === alphabets.charAt(i);}).next('ul').find('li').find('a').each(function(index,item){
              href = $(this).attr('href');
              href = 'http://en.wikipedia.org' +href;
              if (href.indexOf("Argentina") > 0) {}
              else {
                link.push(href);
              }
            });

            alphabetsContd = alphabets.charAt(i)+ " cont.";

            $("h3").filter(function(){return $(this).text() === alphabetsContd;}).next('ul').find('li').find('a').each(function(index,item){
              href = $(this).attr('href');
              href = 'http://en.wikipedia.org' +href;
              if (href.indexOf("Argentina") > 0) {}
              else {
                link.push(href);
                console.log(href);
              }
            }); 
          }
         
        console.log(counter);
        fs.writeFile('links.txt', link);
        callback(null, link);

      })
      
    }

  },


  
  function (link, callback){

    for (k = 0; k < link.length; k++) { 
      var playerURL = link[k];
      andThis(playerURL);
      callback(null, playerBirthLocation);
    }

    function andThis(playerURL) {
      request({
              "url": playerURL
          }, 

        function(err, resp, body){

          var $ = cheerio.load(body);  
          var data ="";
          var meanYear = 0;
          var info = ""; // This will temporarily hold all the info of the player. Until the request runs again.
          var playerHeight = "";
          var playerName = "";

          $('h1').find('span').filter(function(){
            playerName = $(this);
            playerName = playerName.html();
            console.log(playerName);
            info = playerName+ ",";
          })

          var playerAge = "";

          $('.ForceAgeToShow').filter(function(){     
            var data = $(this);
            playerAge = data.html().slice(10,12);
            info = info+playerAge+ ",";
           });

          /*Finding Player's height*/ 

          $('th:contains(Height)').parents('tr').find('td').filter(function(){
            var data = $(this);
            playerHeight = data.html().slice(0,4);
            info = info+playerHeight+",";
          });
          
          //They need to be outside. Otherwise they are undefined outside filter.function()
          var averageYear = 0;
          var meanYear = 0;
          var goals = 0;
          var appearances = 0;

          var famousLevel = ""; //This is a three-way switch which indicates whether the player has 'Honours' and 'Teams Managed' sections in .infobox

          $('th:contains(Honours)').filter(function(){
            famousLevel = "Honours";
          })

          $('th:contains(Teams managed)').filter(function(){
            famousLevel = "Teams managed";
          })

            
          $('.birthplace').find('a').first().filter(function(){     
            var data = $(this).attr('href');
            playerBirthLocationTemp = data;
            playerBirthLocationTemp = 'http://en.wikipedia.org' +playerBirthLocationTemp;


            if (playerBirthLocationTemp.indexOf("php") > 0 || playerBirthLocationTemp.indexOf("wiki/Argentina") > 0) {
            }

            else {

              console.log(info);
              playerBirthLocation.push(playerBirthLocationTemp)
            }

            if (playerBirthLocationTemp == "") {
            }
            else{}

            console.log(playerBirthLocation);

            //playerBirthLocation.push(playerBirthLocationTemp)
            
          });

        csv = csv+info+"\n";
        info = "";

        fs.writeFile('argentinaa.csv', csv); 
      })
    }

  },


  function (playerBirthLocation, callback) {
    console.log('here')
    console.log(playerBirthLocation+ ' asdasdasdasd');
    callback();
  }



])



/* 



  function () {
    console.log(playerBirthLocation);

    console.log(playerBirthLocation)

    request({
      "url": playerBirthLocation
      }, 

    function(err, resp, body){
      var $ = cheerio.load(body);  
      var cord;
      var lat;  
      var longi;

      console.log('csvadasdasdasdasdadass bumped')

      $('.latitude').first().filter(function(){
        var datas = $(this).html();
        console.log(datas)
      })

      $('.firstHeading').find('span').filter(function(){
        var firstHeading = $(this).html();
        console.log(firstHeading)
        coordinates = coordinates+ "," +firstHeading;
      })

    })
    callback();
    
  //console.log(coordinates);
  //fs.writeFile('coordinates.csv', coordinates)


*/